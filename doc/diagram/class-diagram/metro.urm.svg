<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1226px" preserveAspectRatio="none" style="width:2532px;height:1226px;" version="1.1" viewBox="0 0 2532 1226" width="2532px" zoomAndPan="magnify"><defs><filter height="300%" id="f1um8lgo4eyyo5" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster fr.univparis.metro--><polygon fill="#FFFFFF" filter="url(#f1um8lgo4eyyo5)" points="22,24,170,24,177,46.2969,2510,46.2969,2510,1214,22,1214,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="177" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="38.9951">fr.univparis.metro</text><!--class App--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="73.6094" id="App" style="stroke: #A80036; stroke-width: 1.5;" width="142" x="311" y="103.5"/><ellipse cx="365.75" cy="119.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M368.7188,125.1406 Q368.1406,125.4375 367.5,125.5781 Q366.8594,125.7344 366.1563,125.7344 Q363.6563,125.7344 362.3281,124.0938 Q361.0156,122.4375 361.0156,119.3125 Q361.0156,116.1875 362.3281,114.5313 Q363.6563,112.875 366.1563,112.875 Q366.8594,112.875 367.5,113.0313 Q368.1563,113.1875 368.7188,113.4844 L368.7188,116.2031 Q368.0938,115.625 367.5,115.3594 Q366.9063,115.0781 366.2813,115.0781 Q364.9375,115.0781 364.25,116.1563 Q363.5625,117.2188 363.5625,119.3125 Q363.5625,121.4063 364.25,122.4844 Q364.9375,123.5469 366.2813,123.5469 Q366.9063,123.5469 367.5,123.2813 Q368.0938,123 368.7188,122.4219 L368.7188,125.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="386.25" y="123.6543">App</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="312" x2="452" y1="135.5" y2="135.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="312" x2="452" y1="143.5" y2="143.5"/><ellipse cx="322" cy="155.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="331" y="157.7104">App()</text><ellipse cx="322" cy="168.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116" x="331" y="170.5151">main(args : String[])</text><line style="stroke: #000000; stroke-width: 1.0;" x1="331" x2="447" y1="172.5151" y2="172.5151"/><!--class BouarahAlgorithm--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="86.4141" id="BouarahAlgorithm" style="stroke: #A80036; stroke-width: 1.5;" width="1135" x="488.5" y="97.5"/><ellipse cx="995.75" cy="113.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M998.7188,119.1406 Q998.1406,119.4375 997.5,119.5781 Q996.8594,119.7344 996.1563,119.7344 Q993.6563,119.7344 992.3281,118.0938 Q991.0156,116.4375 991.0156,113.3125 Q991.0156,110.1875 992.3281,108.5313 Q993.6563,106.875 996.1563,106.875 Q996.8594,106.875 997.5,107.0313 Q998.1563,107.1875 998.7188,107.4844 L998.7188,110.2031 Q998.0938,109.625 997.5,109.3594 Q996.9063,109.0781 996.2813,109.0781 Q994.9375,109.0781 994.25,110.1563 Q993.5625,111.2188 993.5625,113.3125 Q993.5625,115.4063 994.25,116.4844 Q994.9375,117.5469 996.2813,117.5469 Q996.9063,117.5469 997.5,117.2813 Q998.0938,117 998.7188,116.4219 L998.7188,119.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1016.25" y="117.6543">BouarahAlgorithm</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="489.5" x2="1622.5" y1="129.5" y2="129.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="489.5" x2="1622.5" y1="137.5" y2="137.5"/><ellipse cx="499.5" cy="149.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="508.5" y="151.7104">BouarahAlgorithm()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="496.5" y="159.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="840" x="508.5" y="164.5151">initShortestPath(graph : WGraph&lt;T&gt;, start : T, limit : int, dist : HashMap&lt;Pair&lt;T, Integer&gt;, Double&gt;, priQueue : PriorityQueue&lt;Pair&lt;T, Integer&gt;&gt;)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="508.5" x2="1348.5" y1="166.5151" y2="166.5151"/><ellipse cx="499.5" cy="175.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1109" x="508.5" y="177.3198">shortestPath(graph : WGraph&lt;T&gt;, start : T, limit : int, equivalenceRelation : BiPredicate&lt;T, T&gt;, prev : HashMap&lt;Pair&lt;T, Integer&gt;, Pair&lt;T, Integer&gt;&gt;, dist : HashMap&lt;Pair&lt;T, Integer&gt;, Double&gt;)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="508.5" x2="1617.5" y1="179.3198" y2="179.3198"/><!--class Configuration--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="112.0234" id="Configuration" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="1659" y="84.5"/><ellipse cx="1719.75" cy="100.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1722.7188,106.1406 Q1722.1406,106.4375 1721.5,106.5781 Q1720.8594,106.7344 1720.1563,106.7344 Q1717.6563,106.7344 1716.3281,105.0938 Q1715.0156,103.4375 1715.0156,100.3125 Q1715.0156,97.1875 1716.3281,95.5313 Q1717.6563,93.875 1720.1563,93.875 Q1720.8594,93.875 1721.5,94.0313 Q1722.1563,94.1875 1722.7188,94.4844 L1722.7188,97.2031 Q1722.0938,96.625 1721.5,96.3594 Q1720.9063,96.0781 1720.2813,96.0781 Q1718.9375,96.0781 1718.25,97.1563 Q1717.5625,98.2188 1717.5625,100.3125 Q1717.5625,102.4063 1718.25,103.4844 Q1718.9375,104.5469 1720.2813,104.5469 Q1720.9063,104.5469 1721.5,104.2813 Q1722.0938,104 1722.7188,103.4219 L1722.7188,106.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="1740.25" y="104.6543">Configuration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1660" x2="1872" y1="116.5" y2="116.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1667" y="125.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="1679" y="130.7104">cities : HashMap&lt;String, String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1679" x2="1867" y1="132.7104" y2="132.7104"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1660" x2="1872" y1="137.3047" y2="137.3047"/><ellipse cx="1670" cy="149.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1679" y="151.5151">Configuration()</text><ellipse cx="1670" cy="162.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="1679" y="164.3198">getCitiesName() : Set&lt;String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1679" x2="1853" y1="166.3198" y2="166.3198"/><ellipse cx="1670" cy="174.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="1679" y="177.1245">getFileName(s : String) : String</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1679" x2="1856" y1="179.1245" y2="179.1245"/><ellipse cx="1670" cy="187.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="160" x="1679" y="189.9292">loadFrom(ins : InputStream)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1679" x2="1839" y1="191.9292" y2="191.9292"/><!--class Dijkstra--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="86.4141" id="Dijkstra" style="stroke: #A80036; stroke-width: 1.5;" width="586" x="1908" y="97.5"/><ellipse cx="2173.25" cy="113.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2176.2188,119.1406 Q2175.6406,119.4375 2175,119.5781 Q2174.3594,119.7344 2173.6563,119.7344 Q2171.1563,119.7344 2169.8281,118.0938 Q2168.5156,116.4375 2168.5156,113.3125 Q2168.5156,110.1875 2169.8281,108.5313 Q2171.1563,106.875 2173.6563,106.875 Q2174.3594,106.875 2175,107.0313 Q2175.6563,107.1875 2176.2188,107.4844 L2176.2188,110.2031 Q2175.5938,109.625 2175,109.3594 Q2174.4063,109.0781 2173.7813,109.0781 Q2172.4375,109.0781 2171.75,110.1563 Q2171.0625,111.2188 2171.0625,113.3125 Q2171.0625,115.4063 2171.75,116.4844 Q2172.4375,117.5469 2173.7813,117.5469 Q2174.4063,117.5469 2175,117.2813 Q2175.5938,117 2176.2188,116.4219 L2176.2188,119.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="2193.75" y="117.6543">Dijkstra</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1909" x2="2493" y1="129.5" y2="129.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1909" x2="2493" y1="137.5" y2="137.5"/><ellipse cx="1919" cy="149.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="1928" y="151.7104">Dijkstra()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1916" y="159.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="560" x="1928" y="164.5151">initShortestPath(g : WGraph&lt;T&gt;, s : T, dist : HashMap&lt;T, Double&gt;, priQueue : PriorityQueue&lt;T&gt;)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1928" x2="2488" y1="166.5151" y2="166.5151"/><ellipse cx="1919" cy="175.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="505" x="1928" y="177.3198">shortestPath(g : WGraph&lt;T&gt;, s : T, prev : HashMap&lt;T, T&gt;, dist : HashMap&lt;T, Double&gt;)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1928" x2="2433" y1="179.3198" y2="179.3198"/><!--class GraphExporter--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="86.4141" id="GraphExporter" style="stroke: #A80036; stroke-width: 1.5;" width="458" x="663" y="378"/><ellipse cx="842.25" cy="394" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M845.2188,399.6406 Q844.6406,399.9375 844,400.0781 Q843.3594,400.2344 842.6563,400.2344 Q840.1563,400.2344 838.8281,398.5938 Q837.5156,396.9375 837.5156,393.8125 Q837.5156,390.6875 838.8281,389.0313 Q840.1563,387.375 842.6563,387.375 Q843.3594,387.375 844,387.5313 Q844.6563,387.6875 845.2188,387.9844 L845.2188,390.7031 Q844.5938,390.125 844,389.8594 Q843.4063,389.5781 842.7813,389.5781 Q841.4375,389.5781 840.75,390.6563 Q840.0625,391.7188 840.0625,393.8125 Q840.0625,395.9063 840.75,396.9844 Q841.4375,398.0469 842.7813,398.0469 Q843.4063,398.0469 844,397.7813 Q844.5938,397.5 845.2188,396.9219 L845.2188,399.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="862.75" y="398.1543">GraphExporter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="664" x2="1120" y1="410" y2="410"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="664" x2="1120" y1="418" y2="418"/><ellipse cx="674" cy="429.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="683" y="432.2104">GraphExporter()</text><ellipse cx="674" cy="442.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="432" x="683" y="445.0151">exportToDOT(graph : WGraph&lt;T&gt;, output : File, desc : Function&lt;T, String&gt;)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="683" x2="1115" y1="447.0151" y2="447.0151"/><ellipse cx="674" cy="455.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116" x="683" y="457.8198">main(args : String[])</text><line style="stroke: #000000; stroke-width: 1.0;" x1="683" x2="799" y1="459.8198" y2="459.8198"/><!--class Initialize--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="124.8281" id="Initialize" style="stroke: #A80036; stroke-width: 1.5;" width="342" x="1156" y="358.5"/><ellipse cx="1298.25" cy="374.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1301.2188,380.1406 Q1300.6406,380.4375 1300,380.5781 Q1299.3594,380.7344 1298.6563,380.7344 Q1296.1563,380.7344 1294.8281,379.0938 Q1293.5156,377.4375 1293.5156,374.3125 Q1293.5156,371.1875 1294.8281,369.5313 Q1296.1563,367.875 1298.6563,367.875 Q1299.3594,367.875 1300,368.0313 Q1300.6563,368.1875 1301.2188,368.4844 L1301.2188,371.2031 Q1300.5938,370.625 1300,370.3594 Q1299.4063,370.0781 1298.7813,370.0781 Q1297.4375,370.0781 1296.75,371.1563 Q1296.0625,372.2188 1296.0625,374.3125 Q1296.0625,376.4063 1296.75,377.4844 Q1297.4375,378.5469 1298.7813,378.5469 Q1299.4063,378.5469 1300,378.2813 Q1300.5938,378 1301.2188,377.4219 L1301.2188,380.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="1318.75" y="378.6543">Initialize</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1157" x2="1497" y1="390.5" y2="390.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1157" x2="1497" y1="398.5" y2="398.5"/><ellipse cx="1167" cy="410.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1176" y="412.7104">Initialize()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1164" y="420.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="316" x="1176" y="425.5151">getStationsName(g : WGraph&lt;Station&gt;) : Set&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1176" x2="1492" y1="427.5151" y2="427.5151"/><ellipse cx="1167" cy="436.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="53" x="1176" y="438.3198">initialize()</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1176" x2="1229" y1="440.3198" y2="440.3198"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1164" y="445.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="1176" y="451.1245">whereFrom(g : WGraph&lt;Station&gt;) : Station</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1176" x2="1421" y1="453.1245" y2="453.1245"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1164" y="458.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="230" x="1176" y="463.9292">whereTo(g : WGraph&lt;Station&gt;) : Station</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1176" x2="1406" y1="465.9292" y2="465.9292"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1164" y="471.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="309" x="1176" y="476.7339">whichCity() : AbstractMap.SimpleEntry&lt;String, String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1176" x2="1485" y1="478.7339" y2="478.7339"/><!--class LimitedConnectionSearch--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="137.6328" id="LimitedConnectionSearch" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="1533.5" y="352"/><ellipse cx="1716.25" cy="368" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1719.2188,373.6406 Q1718.6406,373.9375 1718,374.0781 Q1717.3594,374.2344 1716.6563,374.2344 Q1714.1563,374.2344 1712.8281,372.5938 Q1711.5156,370.9375 1711.5156,367.8125 Q1711.5156,364.6875 1712.8281,363.0313 Q1714.1563,361.375 1716.6563,361.375 Q1717.3594,361.375 1718,361.5313 Q1718.6563,361.6875 1719.2188,361.9844 L1719.2188,364.7031 Q1718.5938,364.125 1718,363.8594 Q1717.4063,363.5781 1716.7813,363.5781 Q1715.4375,363.5781 1714.75,364.6563 Q1714.0625,365.7188 1714.0625,367.8125 Q1714.0625,369.9063 1714.75,370.9844 Q1715.4375,372.0469 1716.7813,372.0469 Q1717.4063,372.0469 1718,371.7813 Q1718.5938,371.5 1719.2188,370.9219 L1719.2188,373.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="1736.75" y="372.1543">LimitedConnectionSearch</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1534.5" x2="2065.5" y1="384" y2="384"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1534.5" x2="2065.5" y1="392" y2="392"/><ellipse cx="1544.5" cy="403.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1553.5" y="406.2104">LimitedConnectionSearch()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1541.5" y="413.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="335" x="1553.5" y="419.0151">end(g : MatriceWGraph, start : String, end : String) : String</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="1888.5" y1="421.0151" y2="421.0151"/><ellipse cx="1544.5" cy="429.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="1553.5" y="431.8198">floyd(d : Double[][]) : Double[][]</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="1729.5" y1="433.8198" y2="433.8198"/><ellipse cx="1544.5" cy="442.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="341" x="1553.5" y="444.6245">floyd(direct : Double[][], via : T[][], intermediate : Integer[][])</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="1894.5" y1="446.6245" y2="446.6245"/><ellipse cx="1544.5" cy="455.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="507" x="1553.5" y="457.4292">getPath(g : MatriceWGraph, start : String, end : String) : ArrayList&lt;Pair&lt;String, String&gt;&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="2060.5" y1="459.4292" y2="459.4292"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1541.5" y="464.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="341" x="1553.5" y="470.2339">start(g : MatriceWGraph, start : String, end : String) : String</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="1894.5" y1="472.2339" y2="472.2339"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1541.5" y="477.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="465" x="1553.5" y="483.0386">startAndEnd(g : MatriceWGraph, start : String, end : String) : Pair&lt;String, String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1553.5" x2="2018.5" y1="485.0386" y2="485.0386"/><!--class ListStation--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="73.6094" id="ListStation" style="stroke: #A80036; stroke-width: 1.5;" width="236" x="2102" y="384"/><ellipse cx="2182.75" cy="400" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2185.7188,405.6406 Q2185.1406,405.9375 2184.5,406.0781 Q2183.8594,406.2344 2183.1563,406.2344 Q2180.6563,406.2344 2179.3281,404.5938 Q2178.0156,402.9375 2178.0156,399.8125 Q2178.0156,396.6875 2179.3281,395.0313 Q2180.6563,393.375 2183.1563,393.375 Q2183.8594,393.375 2184.5,393.5313 Q2185.1563,393.6875 2185.7188,393.9844 L2185.7188,396.7031 Q2185.0938,396.125 2184.5,395.8594 Q2183.9063,395.5781 2183.2813,395.5781 Q2181.9375,395.5781 2181.25,396.6563 Q2180.5625,397.7188 2180.5625,399.8125 Q2180.5625,401.9063 2181.25,402.9844 Q2181.9375,404.0469 2183.2813,404.0469 Q2183.9063,404.0469 2184.5,403.7813 Q2185.0938,403.5 2185.7188,402.9219 L2185.7188,405.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="2203.25" y="404.1543">ListStation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2103" x2="2337" y1="416" y2="416"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2103" x2="2337" y1="424" y2="424"/><ellipse cx="2113" cy="435.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2122" y="438.2104">ListStation()</text><ellipse cx="2113" cy="448.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="210" x="2122" y="451.0151">getListStation(name : String) : String</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2122" x2="2332" y1="453.0151" y2="453.0151"/><!--class MatriceWGraph--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="227.2656" id="MatriceWGraph" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="514.5" y="620"/><ellipse cx="706.25" cy="636" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M709.2188,641.6406 Q708.6406,641.9375 708,642.0781 Q707.3594,642.2344 706.6563,642.2344 Q704.1563,642.2344 702.8281,640.5938 Q701.5156,638.9375 701.5156,635.8125 Q701.5156,632.6875 702.8281,631.0313 Q704.1563,629.375 706.6563,629.375 Q707.3594,629.375 708,629.5313 Q708.6563,629.6875 709.2188,629.9844 L709.2188,632.7031 Q708.5938,632.125 708,631.8594 Q707.4063,631.5781 706.7813,631.5781 Q705.4375,631.5781 704.75,632.6563 Q704.0625,633.7188 704.0625,635.8125 Q704.0625,637.9063 704.75,638.9844 Q705.4375,640.0469 706.7813,640.0469 Q707.4063,640.0469 708,639.7813 Q708.5938,639.5 709.2188,638.9219 L709.2188,641.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="726.75" y="640.1543">MatriceWGraph</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="515.5" x2="1000.5" y1="652" y2="652"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="660.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="534.5" y="666.2104">direct : Double[][]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="673.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="534.5" y="679.0151">intermediate : Integer[][]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="686.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="534.5" y="691.8198">setOfVertices : HashMap&lt;String, Integer&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="699.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="534.5" y="704.6245">via : Station[][]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="515.5" x2="1000.5" y1="711.2188" y2="711.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="720.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="534.5" y="725.4292">MatriceWGraph(g : WGraph&lt;Station&gt;)</text><ellipse cx="525.5" cy="735.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="442" x="534.5" y="738.2339">MatriceWGraph(g : WGraph&lt;Station&gt;, m : HashMap&lt;String, MatriceWGraph&gt;)</text><ellipse cx="525.5" cy="748.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="534.5" y="751.0386">getDirect() : Double[][]</text><ellipse cx="525.5" cy="761.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="534.5" y="763.8433">getForkAndCycleStation() : HashMap&lt;String, Integer&gt;</text><ellipse cx="525.5" cy="774.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="534.5" y="776.6479">getIntermediate() : Integer[][]</text><ellipse cx="525.5" cy="787.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="534.5" y="789.4526">getSetOfVertices() : HashMap&lt;String, Integer&gt;</text><ellipse cx="525.5" cy="799.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="534.5" y="802.2573">getVia() : Station[][]</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="809.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="418" x="534.5" y="815.062">graphsLine(g : WGraph&lt;Station&gt;) : HashMap&lt;String, WGraph&lt;Station&gt;&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="534.5" x2="952.5" y1="817.062" y2="817.062"/><ellipse cx="525.5" cy="825.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="461" x="534.5" y="827.8667">initializeAllLineGraphs(g : WGraph&lt;Station&gt;) : HashMap&lt;String, MatriceWGraph&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="534.5" x2="995.5" y1="829.8667" y2="829.8667"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="522.5" y="835.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="534.5" y="840.6714">initializeDirectLine(d : Double[][]) : Double[][]</text><line style="stroke: #000000; stroke-width: 1.0;" x1="534.5" x2="784.5" y1="842.6714" y2="842.6714"/><!--class Pair--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="150.4375" id="Pair" style="stroke: #A80036; stroke-width: 1.5;" width="184" x="1037" y="658.5"/><ellipse cx="1099.25" cy="674.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1102.2188,680.1406 Q1101.6406,680.4375 1101,680.5781 Q1100.3594,680.7344 1099.6563,680.7344 Q1097.1563,680.7344 1095.8281,679.0938 Q1094.5156,677.4375 1094.5156,674.3125 Q1094.5156,671.1875 1095.8281,669.5313 Q1097.1563,667.875 1099.6563,667.875 Q1100.3594,667.875 1101,668.0313 Q1101.6563,668.1875 1102.2188,668.4844 L1102.2188,671.2031 Q1101.5938,670.625 1101,670.3594 Q1100.4063,670.0781 1099.7813,670.0781 Q1098.4375,670.0781 1097.75,671.1563 Q1097.0625,672.2188 1097.0625,674.3125 Q1097.0625,676.4063 1097.75,677.4844 Q1098.4375,678.5469 1099.7813,678.5469 Q1100.4063,678.5469 1101,678.2813 Q1101.5938,678 1102.2188,677.4219 L1102.2188,680.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="1119.75" y="678.6543">Pair</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="25" x="1199" y="655.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="23" x="1200" y="667.6387">T, S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1038" x2="1220" y1="690.5" y2="690.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1045" y="699.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="1057" y="704.7104">obj : T</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1045" y="712.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="1057" y="717.5151">value : S</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1038" x2="1220" y1="724.1094" y2="724.1094"/><ellipse cx="1048" cy="736.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1057" y="738.3198">Pair&lt;T, S&gt;(o : T, v : S)</text><ellipse cx="1048" cy="748.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1057" y="751.1245">equals(o : Object) : boolean</text><ellipse cx="1048" cy="761.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1057" y="763.9292">getObj() : T</text><ellipse cx="1048" cy="774.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1057" y="776.7339">getValue() : S</text><ellipse cx="1048" cy="787.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1057" y="789.5386">hashCode() : int</text><ellipse cx="1048" cy="800.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1057" y="802.3433">setValue(d : S)</text><!--class Parser--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="150.4375" id="Parser" style="stroke: #A80036; stroke-width: 1.5;" width="919" x="1256.5" y="658.5"/><ellipse cx="1691.25" cy="674.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1694.2188,680.1406 Q1693.6406,680.4375 1693,680.5781 Q1692.3594,680.7344 1691.6563,680.7344 Q1689.1563,680.7344 1687.8281,679.0938 Q1686.5156,677.4375 1686.5156,674.3125 Q1686.5156,671.1875 1687.8281,669.5313 Q1689.1563,667.875 1691.6563,667.875 Q1692.3594,667.875 1693,668.0313 Q1693.6563,668.1875 1694.2188,668.4844 L1694.2188,671.2031 Q1693.5938,670.625 1693,670.3594 Q1692.4063,670.0781 1691.7813,670.0781 Q1690.4375,670.0781 1689.75,671.1563 Q1689.0625,672.2188 1689.0625,674.3125 Q1689.0625,676.4063 1689.75,677.4844 Q1690.4375,678.5469 1691.7813,678.5469 Q1692.4063,678.5469 1693,678.2813 Q1693.5938,678 1694.2188,677.4219 L1694.2188,680.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="1711.75" y="678.6543">Parser</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1257.5" x2="2174.5" y1="690.5" y2="690.5"/><ellipse cx="1267.5" cy="702.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="210" x="1276.5" y="704.7104">defaultChangeStationWeight : Double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1486.5" y1="706.7104" y2="706.7104"/><ellipse cx="1267.5" cy="715.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="1276.5" y="717.5151">defaultWeight : Double</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1403.5" y1="719.5151" y2="719.5151"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1257.5" x2="2174.5" y1="724.1094" y2="724.1094"/><ellipse cx="1267.5" cy="736.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1276.5" y="738.3198">Parser()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1264.5" y="745.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="632" x="1276.5" y="751.1245">addMetaStationAndChanging(g : WGraph&lt;Station&gt;, act : Station, createdStation : HashSet&lt;String&gt;, s : String)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1908.5" y1="753.1245" y2="753.1245"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1264.5" y="758.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="893" x="1276.5" y="763.9292">addNextStation(g : WGraph&lt;Station&gt;, prec : Station, s : String, line : String, ahead : boolean, behind : boolean, createdStation : HashSet&lt;String&gt;) : Station</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="2169.5" y1="765.9292" y2="765.9292"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1264.5" y="771.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="653" x="1276.5" y="776.7339">cycle(g : WGraph&lt;Station&gt;, sc : Scanner, start : Station, line : String, createdStation : HashSet&lt;String&gt;) : Station</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1929.5" y1="778.7339" y2="778.7339"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1264.5" y="784.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="647" x="1276.5" y="789.5386">fork(g : WGraph&lt;Station&gt;, sc : Scanner, start : Station, line : String, createdStation : HashSet&lt;String&gt;) : Station</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1923.5" y1="791.5386" y2="791.5386"/><ellipse cx="1267.5" cy="800.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="267" x="1276.5" y="802.3433">loadFrom(is : InputStream) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1276.5" x2="1543.5" y1="804.3433" y2="804.3433"/><!--class PriorityQueue--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="214.4609" id="PriorityQueue" style="stroke: #A80036; stroke-width: 1.5;" width="283" x="2210.5" y="626.5"/><ellipse cx="2300.25" cy="642.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2303.2188,648.1406 Q2302.6406,648.4375 2302,648.5781 Q2301.3594,648.7344 2300.6563,648.7344 Q2298.1563,648.7344 2296.8281,647.0938 Q2295.5156,645.4375 2295.5156,642.3125 Q2295.5156,639.1875 2296.8281,637.5313 Q2298.1563,635.875 2300.6563,635.875 Q2301.3594,635.875 2302,636.0313 Q2302.6563,636.1875 2303.2188,636.4844 L2303.2188,639.2031 Q2302.5938,638.625 2302,638.3594 Q2301.4063,638.0781 2300.7813,638.0781 Q2299.4375,638.0781 2298.75,639.1563 Q2298.0625,640.2188 2298.0625,642.3125 Q2298.0625,644.4063 2298.75,645.4844 Q2299.4375,646.5469 2300.7813,646.5469 Q2301.4063,646.5469 2302,646.2813 Q2302.5938,646 2303.2188,645.4219 L2303.2188,648.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="2320.75" y="646.6543">PriorityQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2487.5" y="623.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2488.5" y="635.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2211.5" x2="2492.5" y1="658.5" y2="658.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2218.5" y="667.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2230.5" y="672.7104">index : HashMap&lt;T, Integer&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2218.5" y="680.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2230.5" y="685.5151">tree : ArrayList&lt;Pair&lt;T, Double&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2211.5" x2="2492.5" y1="692.1094" y2="692.1094"/><ellipse cx="2221.5" cy="704.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2230.5" y="706.3198">PriorityQueue&lt;T&gt;()</text><ellipse cx="2221.5" cy="716.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="2230.5" y="719.1245">PriorityQueue&lt;T&gt;(initialCapacity : int)</text><ellipse cx="2221.5" cy="729.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2230.5" y="731.9292">add(val : T, key : Double) : boolean</text><ellipse cx="2221.5" cy="742.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2230.5" y="744.7339">contains(o : Object) : boolean</text><ellipse cx="2221.5" cy="755.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2230.5" y="757.5386">isEmpty() : boolean</text><ellipse cx="2221.5" cy="768.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="2230.5" y="770.3433">poll() : T</text><ellipse cx="2221.5" cy="780.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2230.5" y="783.1479">remove(o : Object) : boolean</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2218.5" y="790.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2230.5" y="795.9526">siftDown(i : int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2218.5" y="803.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2230.5" y="808.7573">siftUp(i : int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2218.5" y="816.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2230.5" y="821.562">swap(i : int, j : int)</text><ellipse cx="2221.5" cy="832.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="2230.5" y="834.3667">updatePriority(val : T, key : Double) : boolean</text><!--class Station--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="163.2422" id="Station" style="stroke: #A80036; stroke-width: 1.5;" width="215" x="650.5" y="971"/><ellipse cx="731.25" cy="987" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M734.2188,992.6406 Q733.6406,992.9375 733,993.0781 Q732.3594,993.2344 731.6563,993.2344 Q729.1563,993.2344 727.8281,991.5938 Q726.5156,989.9375 726.5156,986.8125 Q726.5156,983.6875 727.8281,982.0313 Q729.1563,980.375 731.6563,980.375 Q732.3594,980.375 733,980.5313 Q733.6563,980.6875 734.2188,980.9844 L734.2188,983.7031 Q733.5938,983.125 733,982.8594 Q732.4063,982.5781 731.7813,982.5781 Q730.4375,982.5781 729.75,983.6563 Q729.0625,984.7188 729.0625,986.8125 Q729.0625,988.9063 729.75,989.9844 Q730.4375,991.0469 731.7813,991.0469 Q732.4063,991.0469 733,990.7813 Q733.5938,990.5 734.2188,989.9219 L734.2188,992.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="751.75" y="991.1543">Station</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="651.5" x2="864.5" y1="1003" y2="1003"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="658.5" y="1011.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="670.5" y="1017.2104">line : String</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="658.5" y="1024.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="670.5" y="1030.0151">name : String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="651.5" x2="864.5" y1="1036.6094" y2="1036.6094"/><polygon fill="#4177AF" points="661.5,1044.5117,657.5,1050.5117,665.5,1050.5117" style="stroke: #1963A0; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="670.5" y="1050.8198">Station(n : String, l : String)</text><ellipse cx="661.5" cy="1061.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="670.5" y="1063.6245">equals(obj : Object) : boolean</text><ellipse cx="661.5" cy="1074.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="670.5" y="1076.4292">getLine() : String</text><ellipse cx="661.5" cy="1086.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="670.5" y="1089.2339">getName() : String</text><ellipse cx="661.5" cy="1099.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="670.5" y="1102.0386">hashCode() : int</text><ellipse cx="661.5" cy="1112.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="670.5" y="1114.8433">sameName(s : Station) : boolean</text><ellipse cx="661.5" cy="1125.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="670.5" y="1127.6479">toString() : String</text><!--class Statistics--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="150.4375" id="Statistics" style="stroke: #A80036; stroke-width: 1.5;" width="670" x="901" y="977.5"/><ellipse cx="1202.75" cy="993.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1205.7188,999.1406 Q1205.1406,999.4375 1204.5,999.5781 Q1203.8594,999.7344 1203.1563,999.7344 Q1200.6563,999.7344 1199.3281,998.0938 Q1198.0156,996.4375 1198.0156,993.3125 Q1198.0156,990.1875 1199.3281,988.5313 Q1200.6563,986.875 1203.1563,986.875 Q1203.8594,986.875 1204.5,987.0313 Q1205.1563,987.1875 1205.7188,987.4844 L1205.7188,990.2031 Q1205.0938,989.625 1204.5,989.3594 Q1203.9063,989.0781 1203.2813,989.0781 Q1201.9375,989.0781 1201.25,990.1563 Q1200.5625,991.2188 1200.5625,993.3125 Q1200.5625,995.4063 1201.25,996.4844 Q1201.9375,997.5469 1203.2813,997.5469 Q1203.9063,997.5469 1204.5,997.2813 Q1205.0938,997 1205.7188,996.4219 L1205.7188,999.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="1223.25" y="997.6543">Statistics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1570" y1="1009.5" y2="1009.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1570" y1="1017.5" y2="1017.5"/><ellipse cx="912" cy="1029.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="921" y="1031.7104">Statistics()</text><ellipse cx="912" cy="1042.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="311" x="921" y="1044.5151">averageNbOfStationPerLine(g : WGraph&lt;Station&gt;) : int</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1232" y1="1046.5151" y2="1046.5151"/><ellipse cx="912" cy="1055.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="485" x="921" y="1057.3198">averageTimeOnEachLine(g : WGraph&lt;Station&gt;, res : HashMap&lt;String, Double&gt;) : int</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1406" y1="1059.3198" y2="1059.3198"/><ellipse cx="912" cy="1067.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="345" x="921" y="1070.1245">extremumLine(g : WGraph&lt;Station&gt;, max : boolean) : String</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1266" y1="1072.1245" y2="1072.1245"/><ellipse cx="912" cy="1080.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="390" x="921" y="1082.9292">longestTimeTravelLine(g : WGraph&lt;Station&gt;) : Pair&lt;String, Double&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1311" y1="1084.9292" y2="1084.9292"/><ellipse cx="912" cy="1093.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="644" x="921" y="1095.7339">minimumCorrespondence(g : WGraph&lt;T&gt;, start : Predicate&lt;T&gt;, end : Predicate&lt;T&gt;, p : BiPredicate&lt;T, T&gt;) : int</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1565" y1="1097.7339" y2="1097.7339"/><ellipse cx="912" cy="1106.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="597" x="921" y="1108.5386">mostDistantStations(g : WGraph&lt;T&gt;, p1 : Predicate&lt;T&gt;, p2 : Predicate&lt;T&gt;) : Pair&lt;Pair&lt;T, T&gt;, Double&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1518" y1="1110.5386" y2="1110.5386"/><ellipse cx="912" cy="1119.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="396" x="921" y="1121.3433">shortestTimeTravelLine(g : WGraph&lt;Station&gt;) : Pair&lt;String, Double&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="921" x2="1317" y1="1123.3433" y2="1123.3433"/><!--class Trafics--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="278.4844" id="Trafics" style="stroke: #A80036; stroke-width: 1.5;" width="589" x="38.5" y="282"/><ellipse cx="308.25" cy="298" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M311.2188,303.6406 Q310.6406,303.9375 310,304.0781 Q309.3594,304.2344 308.6563,304.2344 Q306.1563,304.2344 304.8281,302.5938 Q303.5156,300.9375 303.5156,297.8125 Q303.5156,294.6875 304.8281,293.0313 Q306.1563,291.375 308.6563,291.375 Q309.3594,291.375 310,291.5313 Q310.6563,291.6875 311.2188,291.9844 L311.2188,294.7031 Q310.5938,294.125 310,293.8594 Q309.4063,293.5781 308.7813,293.5781 Q307.4375,293.5781 306.75,294.6563 Q306.0625,295.7188 306.0625,297.8125 Q306.0625,299.9063 306.75,300.9844 Q307.4375,302.0469 308.7813,302.0469 Q309.4063,302.0469 310,301.7813 Q310.5938,301.5 311.2188,300.9219 L311.2188,303.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="328.75" y="302.1543">Trafics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="626.5" y1="314" y2="314"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="322.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="299" x="58.5" y="328.2104">actualTrafics : HashMap&lt;String, WGraph&lt;Station&gt;&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="357.5" y1="330.2104" y2="330.2104"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="335.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="295" x="58.5" y="341.0151">initialTrafics : HashMap&lt;String, WGraph&lt;Station&gt;&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="353.5" y1="343.0151" y2="343.0151"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="348.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="379" x="58.5" y="353.8198">reverts : HashMap&lt;String, HashMap&lt;String, WGraph&lt;Station&gt;&gt;&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="437.5" y1="355.8198" y2="355.8198"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="626.5" y1="360.4141" y2="360.4141"/><ellipse cx="49.5" cy="372.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="58.5" y="374.6245">Trafics()</text><ellipse cx="49.5" cy="385.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="394" x="58.5" y="387.4292">addPerturbation(city : String, type : Perturbation, parameter : Object)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="452.5" y1="389.4292" y2="389.4292"/><ellipse cx="49.5" cy="397.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="58.5" y="400.2339">allTraficsSlowDown(city : String, times : double) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="445.5" y1="402.2339" y2="402.2339"/><ellipse cx="49.5" cy="410.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="410" x="58.5" y="413.0386">entireStationShutDown(city : String, station : String) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="468.5" y1="415.0386" y2="415.0386"/><ellipse cx="49.5" cy="423.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="58.5" y="425.8433">getCities() : Set&lt;String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="199.5" y1="427.8433" y2="427.8433"/><ellipse cx="49.5" cy="436.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="240" x="58.5" y="438.6479">getGraph(city : String) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="298.5" y1="440.6479" y2="440.6479"/><ellipse cx="49.5" cy="449.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="270" x="58.5" y="451.4526">getInitialGraph(city : String) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="328.5" y1="453.4526" y2="453.4526"/><ellipse cx="49.5" cy="461.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="244" x="58.5" y="464.2573">getPerturbation(city : String) : Set&lt;String&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="302.5" y1="466.2573" y2="466.2573"/><ellipse cx="49.5" cy="474.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="64" x="58.5" y="477.062">initTrafics()</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="122.5" y1="479.062" y2="479.062"/><ellipse cx="49.5" cy="487.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="337" x="58.5" y="489.8667">lineShutdown(city : String, line : String) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="395.5" y1="491.8667" y2="491.8667"/><ellipse cx="49.5" cy="500.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="429" x="58.5" y="502.6714">lineSlowDown(city : String, line : String, times : double) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="487.5" y1="504.6714" y2="504.6714"/><ellipse cx="49.5" cy="513.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="471" x="58.5" y="515.4761">partOfLineShutDown(city : String, start : Station, end : Station) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="529.5" y1="517.4761" y2="517.4761"/><ellipse cx="49.5" cy="525.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="563" x="58.5" y="528.2808">partOfLineSlowDown(city : String, start : Station, end : Station, times : Double) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="621.5" y1="530.2808" y2="530.2808"/><ellipse cx="49.5" cy="538.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="391" x="58.5" y="541.0854">partOfStationShutDown(city : String, st : Station) : WGraph&lt;Station&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="449.5" y1="543.0854" y2="543.0854"/><ellipse cx="49.5" cy="551.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="58.5" y="553.8901">revertPerturbation(city : String, name : String)</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="321.5" y1="555.8901" y2="555.8901"/><!--class Perturbation--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="163.2422" id="Perturbation" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="38.5" y="59"/><ellipse cx="113.25" cy="75" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M117.3594,81 L109.6406,81 L109.6406,68.6094 L117.3594,68.6094 L117.3594,70.7656 L112.0938,70.7656 L112.0938,73.4375 L116.8594,73.4375 L116.8594,75.5938 L112.0938,75.5938 L112.0938,78.8438 L117.3594,78.8438 L117.3594,81 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="133.75" y="79.1543">Perturbation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="274.5" y1="91" y2="91"/><ellipse cx="49.5" cy="102.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="58.5" y="105.2104">ALL_TRAFICS_SLOW_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="207.5" y1="107.2104" y2="107.2104"/><ellipse cx="49.5" cy="115.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="171" x="58.5" y="118.0151">ENTIRE_STATION_SHUT_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="229.5" y1="120.0151" y2="120.0151"/><ellipse cx="49.5" cy="128.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="95" x="58.5" y="130.8198">LINE_SHUTDOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="153.5" y1="132.8198" y2="132.8198"/><ellipse cx="49.5" cy="141.3164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="102" x="58.5" y="143.6245">LINE_SLOW_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="160.5" y1="145.6245" y2="145.6245"/><ellipse cx="49.5" cy="154.1211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="135" x="58.5" y="156.4292">PART_LINE_SHUT_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="193.5" y1="158.4292" y2="158.4292"/><ellipse cx="49.5" cy="166.9258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="136" x="58.5" y="169.2339">PART_LINE_SLOW_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="194.5" y1="171.2339" y2="171.2339"/><ellipse cx="49.5" cy="179.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="160" x="58.5" y="182.0386">PART_STATION_SHUT_DOWN</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="218.5" y1="184.0386" y2="184.0386"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="274.5" y1="188.6328" y2="188.6328"/><ellipse cx="49.5" cy="200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="211" x="58.5" y="202.8433">valueOf(name : String) : Perturbation</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="269.5" y1="204.8433" y2="204.8433"/><ellipse cx="49.5" cy="213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="135" x="58.5" y="215.6479">values() : Perturbation[]</text><line style="stroke: #000000; stroke-width: 1.0;" x1="58.5" x2="193.5" y1="217.6479" y2="217.6479"/><!--class WGraph--><rect fill="#FEFECE" filter="url(#f1um8lgo4eyyo5)" height="291.2891" id="WGraph" style="stroke: #A80036; stroke-width: 1.5;" width="406" x="1606" y="907"/><ellipse cx="1774.75" cy="923" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1777.7188,928.6406 Q1777.1406,928.9375 1776.5,929.0781 Q1775.8594,929.2344 1775.1563,929.2344 Q1772.6563,929.2344 1771.3281,927.5938 Q1770.0156,925.9375 1770.0156,922.8125 Q1770.0156,919.6875 1771.3281,918.0313 Q1772.6563,916.375 1775.1563,916.375 Q1775.8594,916.375 1776.5,916.5313 Q1777.1563,916.6875 1777.7188,916.9844 L1777.7188,919.7031 Q1777.0938,919.125 1776.5,918.8594 Q1775.9063,918.5781 1775.2813,918.5781 Q1773.9375,918.5781 1773.25,919.6563 Q1772.5625,920.7188 1772.5625,922.8125 Q1772.5625,924.9063 1773.25,925.9844 Q1773.9375,927.0469 1775.2813,927.0469 Q1775.9063,927.0469 1776.5,926.7813 Q1777.0938,926.5 1777.7188,925.9219 L1777.7188,928.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="1795.25" y="927.1543">WGraph</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2006" y="904"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2007" y="916.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1607" x2="2011" y1="939" y2="939"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1614" y="947.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1626" y="953.2104">wGraph : HashMap&lt;T, HashMap&lt;T, Double&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1607" x2="2011" y1="959.8047" y2="959.8047"/><ellipse cx="1617" cy="971.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1626" y="974.0151">WGraph&lt;T&gt;()</text><ellipse cx="1617" cy="984.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="1626" y="986.8198">addDoubleEdge(e : T, weight : Double, p : Predicate&lt;T&gt;) : boolean</text><ellipse cx="1617" cy="997.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1626" y="999.6245">addEdge(s : T, p : T, weight : Double) : boolean</text><ellipse cx="1617" cy="1010.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1626" y="1012.4292">addVertex(v : T) : boolean</text><ellipse cx="1617" cy="1022.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1626" y="1025.2339">apply(g : WGraph&lt;T&gt;)</text><ellipse cx="1617" cy="1035.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1626" y="1038.0386">clone() : WGraph&lt;T&gt;</text><ellipse cx="1617" cy="1048.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1626" y="1050.8433">containsVertex(s : T) : boolean</text><ellipse cx="1617" cy="1061.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1626" y="1063.6479">deleteVertex(v : T) : boolean</text><ellipse cx="1617" cy="1074.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1626" y="1076.4526">equals(g : WGraph&lt;T&gt;) : boolean</text><ellipse cx="1617" cy="1086.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1626" y="1089.2573">getVertices() : Set&lt;T&gt;</text><ellipse cx="1617" cy="1099.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1626" y="1102.062">nbVertex() : int</text><ellipse cx="1617" cy="1112.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1626" y="1114.8667">nbVertex(p : Predicate&lt;T&gt;) : int</text><ellipse cx="1617" cy="1125.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1626" y="1127.6714">neighbors(vertex : T) : Set&lt;T&gt;</text><ellipse cx="1617" cy="1138.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1626" y="1140.4761">removeEdge(s : T, p : T) : boolean</text><ellipse cx="1617" cy="1150.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1626" y="1153.2808">setWeight(s : T, p : T, weight : Double)</text><ellipse cx="1617" cy="1163.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="1626" y="1166.0854">splitVertex(old : T, newVert1 : T, newVert2 : T)</text><ellipse cx="1617" cy="1176.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1626" y="1178.8901">vertexToString(p : Predicate&lt;T&gt;) : String</text><ellipse cx="1617" cy="1189.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1626" y="1191.6948">weight(s : T, p : T) : Double</text><!--link Perturbation to Trafics--><path d="M207.91,222.05 C217.28,236.88 227.34,252.8 237.53,268.93 " fill="none" id="Perturbation-Trafics" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><ellipse cx="241.4538" cy="275.1388" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="237.1775" x2="245.73" y1="268.3776" y2="281.9"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="248.2149" x2="234.6926" y1="270.8626" y2="279.4151"/><!--link App to BouarahAlgorithm--><!--link BouarahAlgorithm to Configuration--><!--link Configuration to Dijkstra--><!--link App to GraphExporter--><!--link GraphExporter to Initialize--><!--link Initialize to LimitedConnectionSearch--><!--link LimitedConnectionSearch to ListStation--><!--link GraphExporter to MatriceWGraph--><!--link MatriceWGraph to Pair--><!--link Pair to Parser--><!--link Parser to PriorityQueue--><!--link MatriceWGraph to Station--><!--link Station to Statistics--><!--link Statistics to WGraph--><!--
@startuml
package fr.univparis.metro {
  class App {
    + App()
    + main(args : String[]) {static}
  }
  class BouarahAlgorithm {
    + BouarahAlgorithm()
    - initShortestPath(graph : WGraph<T>, start : T, limit : int, dist : HashMap<Pair<T, Integer>, Double>, priQueue : PriorityQueue<Pair<T, Integer>>) {static}
    + shortestPath(graph : WGraph<T>, start : T, limit : int, equivalenceRelation : BiPredicate<T, T>, prev : HashMap<Pair<T, Integer>, Pair<T, Integer>>, dist : HashMap<Pair<T, Integer>, Double>) {static}
  }
  class Configuration {
    - cities : HashMap<String, String> {static}
    + Configuration()
    + getCitiesName() : Set<String> {static}
    + getFileName(s : String) : String {static}
    + loadFrom(ins : InputStream) {static}
  }
  class Dijkstra {
    + Dijkstra()
    - initShortestPath(g : WGraph<T>, s : T, dist : HashMap<T, Double>, priQueue : PriorityQueue<T>) {static}
    + shortestPath(g : WGraph<T>, s : T, prev : HashMap<T, T>, dist : HashMap<T, Double>) {static}
  }
  class GraphExporter {
    + GraphExporter()
    + exportToDOT(graph : WGraph<T>, output : File, desc : Function<T, String>) {static}
    + main(args : String[]) {static}
  }
  class Initialize {
    + Initialize()
    - getStationsName(g : WGraph<Station>) : Set<Station> {static}
    + initialize() {static}
    - whereFrom(g : WGraph<Station>) : Station {static}
    - whereTo(g : WGraph<Station>) : Station {static}
    - whichCity() : AbstractMap.SimpleEntry<String, String> {static}
  }
  class LimitedConnectionSearch {
    + LimitedConnectionSearch()
    - end(g : MatriceWGraph, start : String, end : String) : String {static}
    + floyd(d : Double[][]) : Double[][] {static}
    + floyd(direct : Double[][], via : T[][], intermediate : Integer[][]) {static}
    + getPath(g : MatriceWGraph, start : String, end : String) : ArrayList<Pair<String, String>> {static}
    - start(g : MatriceWGraph, start : String, end : String) : String {static}
    - startAndEnd(g : MatriceWGraph, start : String, end : String) : Pair<String, String> {static}
  }
  class ListStation {
    + ListStation()
    + getListStation(name : String) : String {static}
  }
  class MatriceWGraph {
    - direct : Double[][]
    - intermediate : Integer[][]
    - setOfVertices : HashMap<String, Integer>
    - via : Station[][]
    - MatriceWGraph(g : WGraph<Station>)
    + MatriceWGraph(g : WGraph<Station>, m : HashMap<String, MatriceWGraph>)
    + getDirect() : Double[][]
    + getForkAndCycleStation() : HashMap<String, Integer>
    + getIntermediate() : Integer[][]
    + getSetOfVertices() : HashMap<String, Integer>
    + getVia() : Station[][]
    - graphsLine(g : WGraph<Station>) : HashMap<String, WGraph<Station>> {static}
    + initializeAllLineGraphs(g : WGraph<Station>) : HashMap<String, MatriceWGraph> {static}
    - initializeDirectLine(d : Double[][]) : Double[][] {static}
  }
  class Pair<T, S> {
    - obj : T
    - value : S
    + Pair<T, S>(o : T, v : S)
    + equals(o : Object) : boolean
    + getObj() : T
    + getValue() : S
    + hashCode() : int
    + setValue(d : S)
  }
  class Parser {
    + defaultChangeStationWeight : Double {static}
    + defaultWeight : Double {static}
    + Parser()
    - addMetaStationAndChanging(g : WGraph<Station>, act : Station, createdStation : HashSet<String>, s : String) {static}
    - addNextStation(g : WGraph<Station>, prec : Station, s : String, line : String, ahead : boolean, behind : boolean, createdStation : HashSet<String>) : Station {static}
    - cycle(g : WGraph<Station>, sc : Scanner, start : Station, line : String, createdStation : HashSet<String>) : Station {static}
    - fork(g : WGraph<Station>, sc : Scanner, start : Station, line : String, createdStation : HashSet<String>) : Station {static}
    + loadFrom(is : InputStream) : WGraph<Station> {static}
  }
  class PriorityQueue<T> {
    - index : HashMap<T, Integer>
    - tree : ArrayList<Pair<T, Double>>
    + PriorityQueue<T>()
    + PriorityQueue<T>(initialCapacity : int)
    + add(val : T, key : Double) : boolean
    + contains(o : Object) : boolean
    + isEmpty() : boolean
    + poll() : T
    + remove(o : Object) : boolean
    - siftDown(i : int)
    - siftUp(i : int)
    - swap(i : int, j : int)
    + updatePriority(val : T, key : Double) : boolean
  }
  class Station {
    - line : String
    - name : String
    ~ Station(n : String, l : String)
    + equals(obj : Object) : boolean
    + getLine() : String
    + getName() : String
    + hashCode() : int
    + sameName(s : Station) : boolean
    + toString() : String
  }
  class Statistics {
    + Statistics()
    + averageNbOfStationPerLine(g : WGraph<Station>) : int {static}
    + averageTimeOnEachLine(g : WGraph<Station>, res : HashMap<String, Double>) : int {static}
    + extremumLine(g : WGraph<Station>, max : boolean) : String {static}
    + longestTimeTravelLine(g : WGraph<Station>) : Pair<String, Double> {static}
    + minimumCorrespondence(g : WGraph<T>, start : Predicate<T>, end : Predicate<T>, p : BiPredicate<T, T>) : int {static}
    + mostDistantStations(g : WGraph<T>, p1 : Predicate<T>, p2 : Predicate<T>) : Pair<Pair<T, T>, Double> {static}
    + shortestTimeTravelLine(g : WGraph<Station>) : Pair<String, Double> {static}
  }
  class Trafics {
    - actualTrafics : HashMap<String, WGraph<Station>> {static}
    - initialTrafics : HashMap<String, WGraph<Station>> {static}
    - reverts : HashMap<String, HashMap<String, WGraph<Station>>> {static}
    + Trafics()
    + addPerturbation(city : String, type : Perturbation, parameter : Object) {static}
    + allTraficsSlowDown(city : String, times : double) : WGraph<Station> {static}
    + entireStationShutDown(city : String, station : String) : WGraph<Station> {static}
    + getCities() : Set<String> {static}
    + getGraph(city : String) : WGraph<Station> {static}
    + getInitialGraph(city : String) : WGraph<Station> {static}
    + getPerturbation(city : String) : Set<String> {static}
    + initTrafics() {static}
    + lineShutdown(city : String, line : String) : WGraph<Station> {static}
    + lineSlowDown(city : String, line : String, times : double) : WGraph<Station> {static}
    + partOfLineShutDown(city : String, start : Station, end : Station) : WGraph<Station> {static}
    + partOfLineSlowDown(city : String, start : Station, end : Station, times : Double) : WGraph<Station> {static}
    + partOfStationShutDown(city : String, st : Station) : WGraph<Station> {static}
    + revertPerturbation(city : String, name : String) {static}
  }
  enum Perturbation {
    + ALL_TRAFICS_SLOW_DOWN {static}
    + ENTIRE_STATION_SHUT_DOWN {static}
    + LINE_SHUTDOWN {static}
    + LINE_SLOW_DOWN {static}
    + PART_LINE_SHUT_DOWN {static}
    + PART_LINE_SLOW_DOWN {static}
    + PART_STATION_SHUT_DOWN {static}
    + valueOf(name : String) : Perturbation {static}
    + values() : Perturbation[] {static}
  }
  class WGraph<T> {
    - wGraph : HashMap<T, HashMap<T, Double>>
    + WGraph<T>()
    + addDoubleEdge(e : T, weight : Double, p : Predicate<T>) : boolean
    + addEdge(s : T, p : T, weight : Double) : boolean
    + addVertex(v : T) : boolean
    + apply(g : WGraph<T>)
    + clone() : WGraph<T>
    + containsVertex(s : T) : boolean
    + deleteVertex(v : T) : boolean
    + equals(g : WGraph<T>) : boolean
    + getVertices() : Set<T>
    + nbVertex() : int
    + nbVertex(p : Predicate<T>) : int
    + neighbors(vertex : T) : Set<T>
    + removeEdge(s : T, p : T) : boolean
    + setWeight(s : T, p : T, weight : Double)
    + splitVertex(old : T, newVert1 : T, newVert2 : T)
    + vertexToString(p : Predicate<T>) : String
    + weight(s : T, p : T) : Double
  }
}
Perturbation ..+ Trafics
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 13.0.2+8
Operating System: Linux
OS Version: 5.4.0-29-generic
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>